{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP__MEASUREMENT_ID","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","e","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewnweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ba5e8d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP__MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewnweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      //delete now\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewnweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  //   const getNweets = async () => {\r\n  //     const dbnweets = await dbService.collection(\"nweets\").get();\r\n  //     dbnweets.forEach((document) => {\r\n  //       const nweetObject = {\r\n  //         ...document.data(),\r\n  //         id: document.id,\r\n  //       };\r\n  //       setNweets((prev) => [nweetObject, ...prev]);\r\n  //     });\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    // getNweets();\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n    refreshUser();\r\n  };\r\n  //   const getMyNweets = async () => {\r\n  //     try {\r\n  //       const nweets = await dbService\r\n  //         .collection(\"nweets\")\r\n  //         .where(\"creatorId\", \"==\", userObj.uid)\r\n  //         .orderBy(\"createdAt\")\r\n  //         .get();\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     }\r\n  //   };\r\n  //   useEffect(() => {\r\n  //     getMyNweets();\r\n  //   }, []);\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {userObj && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {userObj ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} userObj={userObj} />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}